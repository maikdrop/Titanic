1. Introduction

Titanic is a simple game where the development started in Spring 2020 after I finished my studies in Applied Computer Science at the University of Applied Science Berlin. During my studies I worked on several projects that contained app prototypes about for example public health, professional environment and smaller apps as exercises in different courses. All apps were written in Swift (it started with Swift 2.2 in 2016) and I used the MVC Pattern. The idea of Titanic based on a simple app exercise during a swift course.

2. Goals

The main goal of the project was to gain knowledge about swift and iOS development. In order to learn more while practicing different technologies were used that offered the same result. For example  several package managers like Cocoa Pods, Homebrew, and Swift Package Manager were used to implement third party libraries.

There were three sub goals:

- implementing MVP pattern
- readable code and clear project structure
- adapting layout for different iPhone screen and text sizes

3. What`s the game about?

Users move a ship horizontally by their thumb to avoid intersections with icebergs, that are moving vertically from top to bottom. If the time is up or the maximum crashes are reached the game ends. Immediately after the game end driven sea miles will be verified. If the user is in the top ten, an alert with a text field shows up in order to enter the name of the user.
 
4. Game Features
 
 - countdown timer
 - score counter
 - game control options
 - smoke animation when ship and iceberg collide
 - high score list
 
5. Technical Infos
 
 - Development Environment: Xcode
 - Language: Swift
 - Deployment Info: iOS 14.0, iPhone
 - 3pp Libraries: SRCountdownTimer, SwiftLint, SnapshotTesting
 - Dependency Manager: CocoaPods¹, Homebrew, SwiftPackageManager

¹CocoaPods was used to implement SRCountdownTimer from Github during the first phase of development. Later it was replaced with a customized class of SRCountdownTimer.
