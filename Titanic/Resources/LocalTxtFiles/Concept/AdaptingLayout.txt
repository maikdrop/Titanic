Adapting Layout:

Different technologies were used to create layouts in Titanic: game view and game view controller programmatically and all others in a storyboard via interface builder. Autolayout was mostly used. The layout of the game view was challenging. On one hand, the score and countdown label should be related to the text size chosen in iPhone settings. On the other hand icebergs and ship sizes should be related to the screen size. According to the game logic, it doesn’t make sense to have a relation between text and the size of the objects.

That means that always three icebergs fit side by side on a screen. If the screen width grows, icebergs and ship will grow as well. In order to achieve the described behaviors, the following three points were made:

- Autolayout and geometry were mixed
- Constraints and object coordinates were defined programmatically in game view
- Iceberg image was created by myself, ship image was created and designed by myself

A second challenge was the SRCountdown Timer, which was imported from Github. Originally the circle and the time label were created without any constraints or any consideration of implementing the content size category. The result was, that the font size didn’t change when the text size was changed by the user. This was resolved by implementing constraints and setting the „adjustsFontForContentSize Category" property of the time label to true. Additionally, dark mode was implemented to improve the UI. The image below illustrates the implementation of dark mode and the content size category of the font. An extra layout feature is the localization of texts. Titanic supports English as the default language and German as an additional language.
